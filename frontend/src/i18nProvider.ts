//Source code generated by AppGPT (www.appgpt.tech)
import { mergeTranslations } from 'ra-core';
import polyglotI18nProvider from 'ra-i18n-polyglot';
import enOriginal from 'ra-language-english';
import frOriginal from 'ra-language-french';

const enResources = {
  resources: {
    texts: { name: 'Texts', fields: { language: 'Language', id: 'id' } },
    podcasts: {
      name: 'Podcasts',
      fields: {
        title: 'Title',
        description: 'Description',
        language: 'Language',
        length: 'Length',
        URL: 'Url',
        id: 'id',
      },
    },
    videos: {
      name: 'Videos',
      fields: {
        title: 'Title',
        description: 'Description',
        category: 'Category',
        language: 'Language',
        length: 'Length',
        URL: 'Url',
        id: 'id',
      },
    },
  },
};
const frResources = {
  resources: {
    texts: {
      name: 'Texts (fr)',
      fields: { language: 'Language (fr)', id: 'id' },
    },
    podcasts: {
      name: 'Podcasts (fr)',
      fields: {
        title: 'Title (fr)',
        description: 'Description (fr)',
        language: 'Language (fr)',
        length: 'Length (fr)',
        URL: 'Url (fr)',
        id: 'id',
      },
    },
    videos: {
      name: 'Videos (fr)',
      fields: {
        title: 'Title (fr)',
        description: 'Description (fr)',
        category: 'Category (fr)',
        language: 'Language (fr)',
        length: 'Length (fr)',
        URL: 'Url (fr)',
        id: 'id',
      },
    },
  },
};

const en = mergeTranslations(enOriginal, enResources);
const fr = mergeTranslations(frOriginal, frResources);

const translations = { en, fr };
export const i18nProvider = polyglotI18nProvider(
  (locale) => translations[locale],
  'en', //default locale
  [
    { locale: 'en', name: 'English' },
    { locale: 'fr', name: 'Fran√ßais' },
  ],
);
